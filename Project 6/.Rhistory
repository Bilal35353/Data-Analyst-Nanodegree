labels = rating_categories,
limits = c(1, 7),
name = 'Category of Risk') +
theme(legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(1, "cm"))
ggplot(aes(x = LoanOriginalAmount, y = LenderYield,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
xlab('Loan Original Amount') +
ylab('Lender Yield') +
geom_jitter() +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category of Risk') +
facet_wrap(~LoanStatusGroup, ncol = 2) +
theme(legend.key.width = unit(1, "cm"))
Default_APR <- ggplot(aes(x = CurrentDelinquencies, y = BorrowerAPR,
color = LoanStatusGroup),
data = filter(proLoan, proLoan$CurrentDelinquencies > 0 &
proLoan$LoanStatusGroup == "Defaulted" &
!is.na(CreditRating))) +
xlab('Current Delinquencies') + ylab('Borrower APR') +
geom_jitter(alpha = 1/2) +
xlim(0, quantile(proLoan$CurrentDelinquencies, 0.995, na.rm = T)) +
facet_wrap(~CreditRating, ncol = 7) +
scale_color_manual(values = c("#FA4659", "#2EB872"))
Complete_APR <- ggplot(aes(x = CurrentDelinquencies, y = BorrowerAPR,
color = LoanStatusGroup),
data = filter(proLoan, proLoan$CurrentDelinquencies > 0 &
proLoan$LoanStatusGroup == "Completed" &
!is.na(CreditRating))) +
xlab('Current Delinquencies') + ylab('Borrower APR') +
geom_jitter(alpha = 1/2) +
xlim(0, quantile(proLoan$CurrentDelinquencies, 0.99, na.rm = T)) +
facet_wrap(~CreditRating, ncol = 7) +
scale_color_manual(values = "#2EB872")
grid.arrange(Complete_APR, Default_APR, ncol = 1)
ggplot(aes(x = TheQuarter, y = proLoan, fill = LoanStatusGroup),
data = proLoan.defaults) +
geom_bar(stat = "identity") +
ggtitle('                                  Status For all Loans Through Financial Years') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans In Thousands") +
xlab("The Quarters Of The Years") +
scale_fill_manual(values = c("#FA4659","#FBB448", "#0C9CEE", "#2EB872"))
ggplot(aes(x = Quarter, y = Rate * 100, group = LoanStatusGroup),
data = subset(proLoan.defaultrate, LoanStatusGroup == "Defaulted")) +
geom_line(size = 0.9) +
ggtitle('                                    Default Rate through Financial Year ') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
stat_smooth(method = "lm", size = 0.7) +
xlab("The Quarters Of The Years") +
ylab("Default Percentage")
ggplot(aes(x = LoanOriginalAmount, y = LenderYield * 100,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
geom_jitter() +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category Of The Risk') +
facet_wrap(~LoanStatusGroup, ncol = 2) +
ggtitle("                                       Loan Amount vs Lender Yield by Loan Status") +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
legend.key.width = unit(1, "cm")) +
xlab("Loan Amount (USD)") +
ylab("Lender Yield Percentage")
#ggplot(aes(x = BorrowerAPR,
#        y = LoanOriginalAmount  , color =  EmploymentStatus),
#  data=subset(pl, (StatedMonthlyIncome < 11000) &
#      (EmploymentStatus != ""))) +
#  geom_point(alpha = 0.1, size = 1) +
# geom_smooth(method = "lm", se = FALSE,size=2)  +
#  scale_color_brewer(type='seq',
#                  guide=guide_legend(title='EmploymentStatus'))
#####2222
ggplot(aes(x = LoanOriginalAmount, y = LenderYield * 100,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
geom_jitter() +
scale_color_brewer(type='seq',
scale_color_brewer(type.convert(seq.int(CreditRating)),guide = guide_legend(title(rating_categories)))
)
#ListingCategory variable type numeric we must Convert it
#to factor variable for using it in our analysis
labels <- c("Debt Consolidation", "Home Improvement", "Business",
"Personal Loan", "Student Use", "Auto", "Baby & Adoption", "Boat",
"Cosmetic Procedure", "Engagement Ring", "Green Loans", "Household Expenses",
"Large Purchases", "Medical/Dental", "Motorcycle", "RV", "Taxes", "Vacation",
"Wedding", "Other", "Not Applicable")
proLoan$ListingCategory <- factor(proLoan$ListingCategory..numeric.,
levels = c(1:6, 8:20, 7, 0),
labels = labels)
proLoan$ListingCategory <- factor(proLoan$ListingCategory..numeric.,
proLoan$ListingCategory <- factor(proLoan$ListingCategory..numeric.,)
# make plotting time series data by Join CreditGrade
#(stores credit rating pre-2009)
#with ProsperRating..Alpha.to make one variable.
rating_categories <- rev(c("HR", "E", "D", "C", "B", "A", "AA"))
proLoan <- proLoan %>%
mutate(CreditRating = ifelse(ProsperRating..Alpha. %in% rating_categories,
as.character(ProsperRating..Alpha.),
ifelse(CreditGrade %in% rating_categories,
as.character(CreditGrade),
NA)))
proLoan$CreditRating <- ordered(proLoan$CreditRating,labels = rating_categories)
ggplot(aes(x = reorder(BorrowerState, BorrowerState,
function(x) length(x)),
fill = I("#DE703B")),
data = proLoan) +
geom_bar() +
xlab("The Borrower State") +
coord_flip()
qplot(x = IncomeRange, data = proLoan, fill = I("#DE703B"))  +
xlab('Income Range')
qplot(x = IncomeRange, data = proLoan, fill = I("#DE703B")) +
xlab('Income Range') +
scale_x_discrete(limits = c("Not employed","$0", "$1-24,999", "$25,000-49,999",
"$50,000-74,999", "$75,000-99,999", "$100,000+",
"Not displayed"))
qplot(x = IncomeRange, data = proLoan, fill = I("#DE703B")) +
xlab('Income Range') +
scale_x_discrete(limits = c("Not employed","$0", "$1-24,999", "$25,000-49,999",
"$50,000-74,999", "$75,000-99,999", "$100,000+",
"Not displayed"))
CreditScoreCount <- qplot(x = CreditScore, data = proLoan, binwidth = 25,
color = I("#525252"), fill = I("#0088D0")) +
xlab('Credit Score ') +
scale_x_continuous(limits = c(400, 900), breaks = seq(400, 900, 100))
CreditScoreDensity <- ggplot(aes(x = CreditScore), data = proLoan) +
geom_histogram(aes(y = ..density..),
binwidth = 25,
color = I("#424242"), fill = I("#0088D0")) +
xlab(' Credit Score') +
geom_density(adjust = 4, alpha = 0.3, fill = I("#DE703B")) +
geom_vline(aes(xintercept = mean(CreditScore, na.rm = T)),
color = I("#F7E74A"), linetype = "dashed", size = 1) +
scale_x_continuous(limits = c(400, 900), breaks = seq(400, 900, 100))
grid.arrange(CreditScoreCount, CreditScoreDensity, ncol = 2)
qplot(x = LenderYield, data = proLoan, binwidth = 0.02,
color = I("#424242"), fill = I("#0077C0")) +
xlab('Lender Yield') +
scale_x_continuous(breaks = seq(0, 0.4, 0.1))
qplot(x = DebtToIncomeRatio, data = proLoan, binwidth = 0.02,
color = I("#0077C0"), fill = I("#DE703B")) +
xlab('Debt To Income Ratio') +
scale_x_continuous(limits = c(0, 1.5),
breaks = seq(0, 1.5, 0.1))
qplot(x = LoanStatus, data = proLoan,
fill = I("#DE703B")) +
xlab('Loan Status') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
qplot(x = ListingCategory, data = proLoan,
fill = I("#DE703B")) +
xlab('Listing Category') +
scale_y_continuous(limits = c(0, 60000), breaks = seq(0, 60000, 5000)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = TheQuarter, y = proLoan), data = proLoan.origination) +
xlab("The Quarters Of The Years") +
geom_bar(stat = "identity", fill = I("#2EB872")) +
geom_text(aes(label = round(proLoan, 1)), vjust = -0.5, size = 4) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans (Thousands)")
ggplot(aes(x = TheQuarter, y = Dollars), data = proLoan.origination) +
geom_bar(stat = "identity", fill = I("#DE703B")) +
xlab("The Quarters Of The Years") +
geom_text(aes(label = round(Dollars, 0)), vjust = -0.5, size = 4) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loaned Dollars In Millions")
proLoan <- proLoan %>%
mutate(LoanStatusGroup = ifelse(LoanStatus %in%
c("Cancelled", "Chargedoff", "Defaulted"), 0,
ifelse(LoanStatus %in%
c("Current", "FinalPaymentInProgress"), 2,
ifelse(LoanStatus %in%
c("Completed"), 3,
1))))
proLoan$LoanStatusGroup <- factor(proLoan$LoanStatusGroup, levels = 0:3,
labels = c("Defaulted", "Past Due",
"Current", "Completed"))
proLoan.defaults <- proLoan %>%
group_by(TheQuarter = LoanOriginationQuarter, LoanStatusGroup) %>%
summarise(proLoan = n() / 1000) %>%
arrange(TheQuarter, LoanStatusGroup)
ggplot(aes(x = TheQuarter, y = proLoan, fill = LoanStatusGroup),
data = proLoan.defaults) +
xlab("The Quarters Of The Years") +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans Status Group (In Thousands)") +
scale_fill_manual(values = c("#FA4659","#FBB448", "#0C9CEE", "#2EB872"))
ggplot(aes(x = TheQuarter, y = proLoan,
group = LoanStatusGroup, color = LoanStatusGroup),
data = proLoan.defaults) +
xlab("The Quarters Of The Years") +
geom_line(aes(group = LoanStatusGroup, color = LoanStatusGroup),
size = 2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans (In Thousands)") +
scale_color_manual(values = c("#FA4659","#FBB448", "#0C9CEE", "#2EB872"))
ggplot(aes(x = ProsperRating..Alpha., y = CreditScore,
fill = I("#FBB448"), color = I("#506E86")),
data = proLoan) +
xlab("Prosper Rating") +
geom_boxplot(lwd = 0.75, outlier.color = I("#FA4659"), outlier.shape = 1) +
scale_x_discrete(limits = c("HR", "E", "D", "C", "B", "A", "AA")) +
ylab("Credit Score") +
coord_cartesian(ylim = c(600, 1000))
ggplot(aes(x = ProsperRating..Alpha., y = BorrowerAPR * 100,
fill = I("#FBB448"), color = I("#506E86")),
data = subset(proLoan, !is.na(BorrowerAPR))) +
xlab("Prosper Rating") +
geom_boxplot(lwd = 0.75, outlier.colour = I("#FA4659"), outlier.shape = 1) +
scale_x_discrete(limits = c("HR", "E", "D", "C", "B", "A", "AA")) +
ylab("Borrower APR")
ggplot(aes(x = TheQuarter, y = proLoan * 1000, group = LoanStatusGroup),
data = filter(proLoan.defaults,
as.numeric(LoanStatusGroup) < 2)) +
xlab("The Quarters Of The Years") +
geom_line(size = 0.9) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_y_continuous(breaks = seq(0, 1500, 200)) +
ylab("Defualted Loans")
proLoan.defaultrate <- proLoan %>%
filter(LoanStatusGroup != "Current" & LoanStatusGroup != "Past Due") %>%
group_by(Quarter = LoanOriginationQuarterF, LoanStatusGroup) %>%
summarise(proLoan = n()) %>%
mutate(Rate = proLoan / sum(proLoan))
ggplot(aes(x = Quarter, y = Rate * 100, group = LoanStatusGroup),
data = subset(proLoan.defaultrate, LoanStatusGroup == "Defaulted")) +
xlab("The Quarters Of The Years") +
geom_line(size = 0.9) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
stat_smooth(method = "lm", size = 0.7) +
ylab("Default Percentage")
ggplot(aes(x = Quarter, y = Rate * 100, group = CreditRating,
color = CreditRating),
data = subset(proLoan.defaultratecolor,
LoanStatusGroup == "Defaulted",
na.rm = T)) +
xlab("The Quarters Of The Years") +
geom_line(size = 0.9) +
scale_color_brewer(palette = "Blues") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Default Percentage")
ggplot(aes(x = DelinquenciesLast7Years, y = AmountDelinquent),
data = filter(proLoan, AmountDelinquent > 0 &
EmploymentStatus != "Other" )) +
xlab('Delinquencies for Last 7 Years') +
geom_point() +
xlim(0, quantile(proLoan$DelinquenciesLast7Years, 0.99, na.rm = T)) +
ylim(0, quantile(proLoan$AmountDelinquent, 0.99, na.rm = T)) +
facet_wrap(~EmploymentStatus) +
ylab('Amount Delinquent')
proLoan.status <- proLoan %>%
filter(LoanStatus %in% c("Completed", "Defaulted")) %>%
select(DebtToIncomeRatio, CreditScore, LoanStatus,
LoanOriginationQuarter)
proLoan$StatedMonthlyIncome.bucket = cut(proLoan$StatedMonthlyIncome,
c( 0, 3200, 4667, 5608 ,   6825, 1750000))
ggplot(aes(x = StatedMonthlyIncome.bucket,
y = LoanOriginalAmount),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
geom_boxplot(aes(fill = EmploymentStatus) )   +
xlab('Stated Monthly Income') +
ylab('Loan Original Amount') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
proLoan$StatedMonthlyIncome.bucket = cut(proLoan$StatedMonthlyIncome,
c( 0, 3200, 4667, 5608 ,   6825, 1750000))
ggplot(aes(x = StatedMonthlyIncome.bucket,
y = LoanOriginalAmount),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
geom_boxplot(aes(fill = EmploymentStatus) )   +
xlab('Stated Monthly Income') +
ylab('Loan Original Amount') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x = DebtToIncomeRatio, y = BorrowerAPR,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
xlab('Debt To Income Ratio') +
ylab('Borrower APR') +
geom_jitter() +
xlim(0, quantile(proLoan$DebtToIncomeRatio, 0.995, na.rm = T)) +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category of Risk') +
theme(legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(1, "cm"))
ggplot(aes(x = DebtToIncomeRatio, y = BorrowerAPR,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
xlab('Debt To Income Ratio') +
ylab('Borrower APR') +
geom_jitter() +
xlim(0, quantile(proLoan$DebtToIncomeRatio, 0.995, na.rm = T)) +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category of Risk') +
theme(legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(1, "cm"))
#تعديل الخطوة
ggplot(aes(x = DebtToIncomeRatio, y = BorrowerAPR,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
xlab('Debt To Income Ratio') +
ylab('Borrower APR') +
geom_jitter() +
xlim(0, quantile(proLoan$DebtToIncomeRatio, 0.995, na.rm = T)) +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category of Risk') +
theme(legend.position = "right",
legend.direction = "vertical",
legend.key.size = unit(1, "cm"))
Default_APR <- ggplot(aes(x = CurrentDelinquencies, y = BorrowerAPR,
color = LoanStatusGroup),
data = filter(proLoan, proLoan$CurrentDelinquencies > 0 &
proLoan$LoanStatusGroup == "Defaulted" &
!is.na(CreditRating))) +
xlab('Current Delinquencies') + ylab('Borrower APR') +
geom_jitter(alpha = 1/2) +
xlim(0, quantile(proLoan$CurrentDelinquencies, 0.995, na.rm = T)) +
facet_wrap(~CreditRating, ncol = 7) +
scale_color_manual(values = c("#FA4659", "#2EB872"))
Complete_APR <- ggplot(aes(x = CurrentDelinquencies, y = BorrowerAPR,
color = LoanStatusGroup),
data = filter(proLoan, proLoan$CurrentDelinquencies > 0 &
proLoan$LoanStatusGroup == "Completed" &
!is.na(CreditRating))) +
xlab('Current Delinquencies') + ylab('Borrower APR') +
geom_jitter(alpha = 1/2) +
xlim(0, quantile(proLoan$CurrentDelinquencies, 0.99, na.rm = T)) +
facet_wrap(~CreditRating, ncol = 7) +
scale_color_manual(values = "#2EB872")
grid.arrange(Complete_APR, Default_APR, ncol = 1)
ggplot(aes(x = TheQuarter, y = proLoan, fill = LoanStatusGroup),
data = proLoan.defaults) +
geom_bar(stat = "identity") +
ggtitle(' Status For all Loans Through Financial Years') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans In Thousands") +
xlab("The Quarters Of The Years") +
scale_fill_manual(values = c("#FA4659","#FBB448", "#0C9CEE", "#2EB872"))
ggplot(aes(x = TheQuarter, y = proLoan, fill = LoanStatusGroup),
data = proLoan.defaults) +
geom_bar(stat = "identity") +
ggtitle(' Status For all Loans Through Financial Years') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Loans In Thousands") +
xlab("The Quarters Of The Years") +
scale_fill_manual(values = c("#FA4659","#FBB448", "#0C9CEE", "#2EB872"))
ggplot(aes(x = Quarter, y = Rate * 100, group = LoanStatusGroup),
data = subset(proLoan.defaultrate, LoanStatusGroup == "Defaulted")) +
geom_line(size = 0.9) +
ggtitle(' Default Rate through Financial Year ') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
stat_smooth(method = "lm", size = 0.7) +
xlab("The Quarters Of The Years") +
ylab("Default Percentage")
ggplot(aes(x = Quarter, y = Rate * 100, group = LoanStatusGroup),
data = subset(proLoan.defaultrate, LoanStatusGroup == "Defaulted")) +
geom_line(size = 0.9) +
ggtitle(' Default Rate through Financial Year ') +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
stat_smooth(method = "lm", size = 0.7) +
xlab("The Quarters Of The Years") +
ylab("Default Percentage")
ggplot(aes(x = LoanOriginalAmount, y = LenderYield * 100,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
geom_jitter() +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category Of The Risk') +
facet_wrap(~LoanStatusGroup, ncol = 2) +
ggtitle(" Loan Amount vs Lender Yield by Loan Status") +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
legend.key.width = unit(1, "cm")) +
xlab("Loan Amount (USD)") +
ylab("Lender Yield Percentage")
ggplot(aes(x = LoanOriginalAmount, y = LenderYield * 100,
color = as.integer(CreditRating), group = CreditRating),
data = proLoan) +
geom_jitter() +
scale_color_gradient2(high = "#FA4659", midpoint = 4, mid = "#FBB448",
low = "#2EB872",
breaks = seq(1, 7, 1),
labels = rating_categories,
limits = c(1, 7),
name = 'Category Of The Risk') +
facet_wrap(~LoanStatusGroup, ncol = 2) +
ggtitle(" Loan Amount vs Lender Yield by Loan Status") +
theme(plot.title = element_text(lineheight = 0.8, face = "bold"),
legend.key.width = unit(1, "cm")) +
xlab("Loan Amount (USD)") +
ylab("Lender Yield Percentage")
proLoan.status <- proLoan %>%
filter(LoanStatus %in% c("Completed", "Defaulted")) %>%
select(DebtToIncomeRatio, CreditScore, LoanStatus,
LoanOriginationQuarter)
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(pl, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' LoanO riginal Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' LoanO riginal Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' Loan Original Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color = I("#506E86")),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' Loan Original Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus("#506E86")),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' Loan Original Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
ggplot(aes(x = BorrowerAPR,
y = LoanOriginalAmount  , color =  EmploymentStatus),
data=subset(proLoan, (StatedMonthlyIncome < 11000) &
(EmploymentStatus != ""))) +
xlab('Borrower APR ') +
ylab(' Loan Original Amount ') +
geom_point(alpha = 0.1, size = 1) +
geom_smooth(method = "lm", se = FALSE,size=2)  +
scale_color_brewer(type='seq',
guide=guide_legend(title='EmploymentStatus'))
